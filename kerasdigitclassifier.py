# -*- coding: utf-8 -*-
"""kerasDigitClassifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uciEaeyK-J9l4cLfVle7p_0oFMuI5YyA
"""

!pip install -U -q PyDrive ## you will have install for every colab session

from pydrive.auth import GoogleAuth
from pydrive.drive import GoogleDrive
from google.colab import auth
from oauth2client.client import GoogleCredentials

# 1. Authenticate and create the PyDrive client.
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

!apt-get install -y -qq software-properties-common python-software-properties module-init-tools
!add-apt-repository -y ppa:alessandro-strada/ppa 2>&1 > /dev/null
!apt-get update -qq 2>&1 > /dev/null
!apt-get -y install -qq google-drive-ocamlfuse fuse
from google.colab import auth
auth.authenticate_user()
from oauth2client.client import GoogleCredentials
creds = GoogleCredentials.get_application_default()
import getpass
!google-drive-ocamlfuse -headless -id={creds.client_id} -secret={creds.client_secret} < /dev/null 2>&1 | grep URL
vcode = getpass.getpass()
!echo {vcode} | google-drive-ocamlfuse -headless -id={creds.client_id} -secret={creds.client_secret}

!mkdir -p drive
!google-drive-ocamlfuse drive

!ls drive

from google.colab import files

Folder = drive.CreateFile({'id':'1yQECTj2sE8Ra4BTv8CtD39H6tJ3KEzIl'})

type(Folder)











!mkdir -p drive
!google-drive-ocamlfuse drive

# import modules
import glob
import numpy as np
import cv2
from random import shuffle

# resize images    
for img in glob.iglob("TrainData/*.png"):
    im = cv2.imread(img)
    im_resize = cv2.resize(im,(50,50))
    cv2.imwrite(img, im_resize)
    
# Load image names in ramdom manner
image_list = [img for img in glob.iglob("TrainData/*.png")]
shuffle(image_list)

# Load Data
X_data = np.empty(shape=[len(image_list), 50, 50, 3])
Y_data = np.zeros((10160, 10))

i = 0
for image in image_list:
    X_data[i] = cv2.imread(image)
    index = int(image_list[i][15:16]) - 1
    Y_data[i][index] = 1
    i = i + 1
    
Y_data = Y_data.astype(int)

for i in range(len(Y_data)):
    for j in range(10):
        if Y_data[i,j] == -1:
            Y_data[i,j] = 9
X_data = X_data / 255


# len(image_list) = 10160
# training data
X_train = X_data[0:8000]
Y_train = Y_data[0:8000]

# test data
X_test = X_data[8000:10160]
Y_test = Y_data[8000:10160]

# import modules
from keras.models import Sequential
from keras.layers import Conv2D, MaxPooling2D
from keras.layers import Activation, Dropout, Flatten, Dense
from keras.layers.normalization import BatchNormalization
from keras import optimizers

model = Sequential()

model.add(Conv2D(32, (3, 3), input_shape=(50,50,3)))
model.add(Activation('relu'))
BatchNormalization(axis=-1)
model.add(Conv2D(32, (3, 3)))
model.add(Activation('relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

BatchNormalization(axis=-1)
model.add(Conv2D(64,(3, 3)))
model.add(Activation('relu'))
BatchNormalization(axis=-1)
model.add(Conv2D(64, (3, 3)))
model.add(Activation('relu'))
model.add(MaxPooling2D(pool_size=(2,2)))

model.add(Flatten())
# Fully connected layer

BatchNormalization()
model.add(Dense(512))
model.add(Activation('relu'))
BatchNormalization()
model.add(Dropout(0.2))
model.add(Dense(10))

model.add(Activation('softmax'))

sgd = optimizers.SGD(lr=0.01, clipvalue=0.5)
model.compile(loss='mean_squared_error',
              optimizer=sgd,
              metrics=['accuracy'])


model.fit(X_train, Y_train,
          epochs=45,
          batch_size=10)

score = model.evaluate(X_test, Y_test, batch_size=32)
print("--------------------------------------------")
print("Score is",score)

# save weights
#model.save_weights('keras_digit_classifier.h5')









import cv2

#https://drive.google.com/open?id=1JluuiEkzl5-xBUJck32qNUBJJgpqJLFI
image = drive.CreateFile({'id':'1JluuiEkzl5-xBUJck32qNUBJJgpqJLFI'})
image.GetContentFile('Screen Shot 2018-07-04 at 3.39.03 PM')
im = cv2.imread('Screen Shot 2018-07-04 at 3.39.03 PM')
print(im)



!pwd drive

#https://drive.google.com/open?id=1yQECTj2sE8Ra4BTv8CtD39H6tJ3KEzIl
Folder = drive.CreateFile({'id':'1yQECTj2sE8Ra4BTv8CtD39H6tJ3KEzIl'})

